name: Build and Deploy
on: 
  push:
    branches:
      - master

env:
  AWS_REGION: us-east-1
  AWS_STACK_NAME: downloadmysnapchatmemories-dot-com

jobs:
  create_tag:
    environment: production
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@master
      with:
        node-version: "17.1.0"
    - name: install dependencies
      run: npm install
    
    - name: Get version
      id: get-version
      run: echo ::set-output name=app_version::$(cat package.json | jq -r '.version')

    - name: Push tag
      run: |
        tag="v${{ steps.get-version.outputs.app_version }}"
        git config user.name "${GITHUB_ACTOR}"
        git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git tag "${tag}"
        git push origin "${tag}"

  publish_on_linux:
    needs: create_tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@master
        with:
          node-version: "17.1.0"
      - name: install dependencies
        run: npm install
      - name: publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run publish

  publish_on_mac:
    needs: create_tag
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@master
        with:
          node-version: "17.1.0"
      - name: install dependencies
        run: npm install
      - name: publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run publish

  publish_on_win:
    needs: create_tag
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@master
        with:
          node-version: "17.1.0"
      - name: install dependencies
        run: npm install
      - name: publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run publish

  deploy_website:
    needs: [publish_on_linux, publish_on_mac, publish_on_win]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@master

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ secrets.IAM_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
        
      - name: Deploy CloudFormation stack
        run: sam deploy --config-file ./samconfig.toml --region $AWS_REGION --stack-name $AWS_STACK_NAME

      - name: Upload website content
        run: |
          BUCKET=$(aws cloudformation describe-stacks --stack-name=$AWS_STACK_NAME --region $AWS_REGION --query 'Stacks[0].Outputs[?OutputKey==`S3BucketName`].OutputValue' --output text)
          aws s3 sync docs s3://$BUCKET
